<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
    <!--加载db.properties资源文件-->
    <context:property-placeholder location="classpath:db.properties" ignore-unresolvable="true"/>
    <!--数据源对象-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${jdbc.driverClass}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.user}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>
    <!--sqlSessoinFactory对象-->
    <bean id="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="typeAliasesPackage" value="cn.com.demo.ssm.spring.mybatis.entity"/>
        <property name="mapperLocations" value="classpath:cn/com/demo/ssm/spring/mybatis/entity/*.xml"/>
    </bean>
    <!--配置实现接口同Mapper.xml自动绑定的工具对象-->
    <bean id="dynBindTools" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="cn.com.demo.ssm.spring.mybatis.dao"/>
        <!--在spring里使用org.mybatis.spring.mapper.MapperScannerConfigurer 进行自动扫描的时候，
        设置了sqlSessionFactory 的话，可能会导致PropertyPlaceholderConfigurer失效，
        也就是用${jdbc.username}这样之类的表达式，将无法获取到properties文件里的内容。
        导致这一原因是因为，MapperScannerConigurer实际是在解析加载bean定义阶段的，
        这个时候要是设置sqlSessionFactory的话，会导致提前初始化一些类，这个时候，
        PropertyPlaceholderConfigurer还没来得及替换定义中的变量，导致把表达式当作字符串复制了
        改成设置sqlSessionFactoryBeanName可以解决这矛盾
                <property name="sqlSessionFactory" ref="sessionFactory"/>-->
        <property name="sqlSessionFactoryBeanName" value="sessionFactory"/>
    </bean>
</beans>